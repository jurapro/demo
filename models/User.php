<?php

namespace app\models;

use Yii;

/**
 * This is the model class for table "user".
 *
 * @property int $id
 * @property string $full_name
 * @property string $login
 * @property string $email
 * @property string $password
 * @property int $role
 *
 * @property Request[] $requests
 */
class User extends \yii\db\ActiveRecord implements \yii\web\IdentityInterface
{
    public $password_repeat;
    public $check;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'user';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['full_name', 'login', 'email', 'password', 'password_repeat','check'], 'required'],
            [['check'],  'compare', 'compareValue'=>1, 'message'=>'Нужно согласиться на обработку персональных данных'],
            ['password_repeat', 'compare', 'compareAttribute' => 'password'],
            ['full_name', 'match', 'pattern' => '/^[а-яА-Я -]*$/u','message'=>'В ФИО разрешены символы кирилицы, пробелы и дефисы'],
            ['login', 'match', 'pattern' => '/^[a-zA-Z]\w*$/u','message'=>'В логине разрешены символы латиницы'],
            [['login'], 'unique'],
            [['email'], 'email'],
            [['role'], 'integer'],
            [['role'], 'default', 'value' => 0],
            [['full_name'], 'string', 'max' => 50],
            [['login', 'email'], 'string', 'max' => 30],
            [['password'], 'string', 'max' => 255],

        ];
    }


    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'full_name' => 'ФИО',
            'login' => 'Логин',
            'email' => 'Email',
            'password' => 'Пароль',
            'password_repeat' => 'Повторить пароль',
            'check' => 'Согласие на обработку персональных данных',
        ];
    }

    /**
     * Gets query for [[Requests]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getRequests()
    {
        return $this->hasMany(Request::className(), ['id_user' => 'id']);
    }


    public static function findIdentity($id)
    {
        return static::findOne($id);
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        return null;
    }

    public function getId()
    {
        return $this->id;
    }

    public function getAuthKey()
    {
        return null;
    }

    public function validateAuthKey($authKey)
    {
        return null;
    }

    public function validatePassword($password)
    {
        return $this->password === md5($password);
    }

    public static function findByUsername($login)
    {
        return static::find()->where(['login' => $login])->one();
    }

    public function beforeSave($insert)
    {
        $this->password = md5($this->password);
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


}
